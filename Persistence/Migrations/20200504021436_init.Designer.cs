// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Tymish.Domain.Entities;
using Tymish.Persistence;

namespace Persistence.Migrations
{
    [DbContext(typeof(TymishDbContext))]
    [Migration("20200504021436_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Tymish.Domain.Entities.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("character varying(320)")
                        .HasMaxLength(320);

                    b.Property<int>("EmployeeNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("FamilyName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("GivenName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("HourlyPay")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasAlternateKey("EmployeeNumber");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9c86216f-6422-47ba-b158-bdac76805c0a"),
                            Email = "alice.zuberg@gmail.com",
                            EmployeeNumber = 1,
                            FamilyName = "Zuberg",
                            GivenName = "Alice",
                            HourlyPay = 25m
                        },
                        new
                        {
                            Id = new Guid("3f289a60-366f-4316-b6f2-e68e811f8b05"),
                            Email = "bob.mcphearson@gmail.com",
                            EmployeeNumber = 2,
                            FamilyName = "McPhearson",
                            GivenName = "Bob",
                            HourlyPay = 20m
                        });
                });

            modelBuilder.Entity("Tymish.Domain.Entities.Invoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Paid")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("PayPeriod")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("Sent")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("Submitted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<IList<TimeEntry>>("TimeEntries")
                        .HasColumnType("jsonb");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Invoices");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5d6e0332-f791-4dad-bb02-269d56b1df57"),
                            EmployeeId = new Guid("9c86216f-6422-47ba-b158-bdac76805c0a"),
                            PayPeriod = new DateTime(2019, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Sent = new DateTime(2019, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("0470ff9a-f359-40a4-a5de-cbbd765c8e7b"),
                            EmployeeId = new Guid("9c86216f-6422-47ba-b158-bdac76805c0a"),
                            PayPeriod = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Sent = new DateTime(2020, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("dfa95a83-3187-4ffb-a6f9-5a8a62d6bf9c"),
                            EmployeeId = new Guid("9c86216f-6422-47ba-b158-bdac76805c0a"),
                            PayPeriod = new DateTime(2020, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Sent = new DateTime(2020, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("d9e353ca-a2ae-4b86-a60c-07ea19d2e689"),
                            EmployeeId = new Guid("3f289a60-366f-4316-b6f2-e68e811f8b05"),
                            PayPeriod = new DateTime(2019, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Sent = new DateTime(2019, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("28a4410c-710c-4b2e-a950-67d74ebebd87"),
                            EmployeeId = new Guid("3f289a60-366f-4316-b6f2-e68e811f8b05"),
                            PayPeriod = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Sent = new DateTime(2020, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("2423ed81-d924-46d9-a44a-74ff3973ea3e"),
                            EmployeeId = new Guid("3f289a60-366f-4316-b6f2-e68e811f8b05"),
                            PayPeriod = new DateTime(2020, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Sent = new DateTime(2020, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Tymish.Domain.Entities.Invoice", b =>
                {
                    b.HasOne("Tymish.Domain.Entities.Employee", "Employee")
                        .WithMany("Invoices")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
